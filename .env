API_BASE_URL=http://localhost:8000
NEXT_PUBLIC_API_BASE_PATH=/api/proxy

# 本プロジェクトでは、以下の2つの異なる定義を使用している。
#
# ・NEXT_PUBLIC_プレフィックスありの環境変数
# const context = {
#   apiRootUrl: process.env.NEXT_PUBLIC_API_BASE_PATH || '/api/proxy',
# }
#
# ・通常の環境変数
# const context = {
#   apiRootUrl: process.env.API_BASE_URL || 'http://localhost:8000',
# }
#
# 異なる定義を使用している理由は以下の通り。
# 1. 実行環境の違い:
# NEXT_PUBLIC_: クライアントサイド（ブラウザ）で実行（Next.jsにおいてクライアントサイドで環境変数を使用する場合はNEXT_PUBLIC_プレフィックスが必須）
# 通常の環境変数: サーバーサイド（Next.jsサーバー）で実行（これはクライアントサイドでは使用できない）
#
# 2. セキュリティの考慮:
# クライアントサイド: 直接APIサーバーにアクセスせず、Next.jsのAPIルート（/api/proxy）を経由
# サーバーサイド: 直接APIサーバー（http://localhost:8000）にアクセス可能
#
# 3. 環境変数の使い分け:
# NEXT_PUBLIC_: クライアントサイド・サーバーサイドの両方で利用可能な環境変数
# 通常の環境変数: サーバーサイドでのみ利用可能（セキュリティ上の理由）
#
# 4. アーキテクチャ（処理の流れ）の違い:
# クライアントサイド: ブラウザ → Next.js（/api/proxy） → APIサーバー
# サーバーサイド: Next.js → APIサーバー（直接アクセス）
#
# このような設計により、セキュリティを確保しながら、適切なAPIアクセスを実現しています
#
# なお、本プロジェクトでは、/api/proxyへのリクエストは、next.config.mjsで設定されたプロキシルール（rewrites）に従って、
# APIサーバー（http://localhost:8000）に転送されるようになっている（next.config.mjsに定義されているrewrites参照）。
